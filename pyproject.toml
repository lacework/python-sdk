[tool.poetry]
name = "laceworksdk"
version = "2.1.0"
description = "Community-developed Python SDK for the Lacework APIs"
authors = ["Jon Stewart <jon.stewart@lacework.net>"]
maintainers = ["Jon Stewart <jon.stewart@lacework.net>", "Matthew Cadorette <matthew.cadorette@lacework.net>"]
readme = "README.md"
packages = [{include = "laceworksdk"}]
license = "MIT"
homepage = "https://github.com/lacework/python-sdk"
repository = "https://github.com/lacework/python-sdk"
keywords = ["lacework", "api", "sdk", "python"]
classifiers = [
  "Development Status :: 4 - Beta",
  "Intended Audience :: Developers",
  "Topic :: Software Development :: Build Tools",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
]

[tool.poetry.dependencies]
python = ">=3.8,<4"
python-dotenv = ">=0.20.0"
requests = ">=2.27.1"
configparser = ">=5.2.0"
bleach = ">=4.1.0"
urllib3 = ">=1.26.15"
importlib-metadata = ">=4.2"

[tool.poetry.group.dev.dependencies]
autopep8 = "^1.7"
flake8 = "^5.0.4"
flake8-quotes = "^3.3"
ruff = "^0.1.9"
pytest = "^7.2.2"
pytest-order = "^1.2.0"
pytest-lazy-fixture = "^0.6.3"
pytest-rerunfailures = "^11.1.2"
mypy = "^1.1.1"
types-requests = "^2.28"
types-urllib3 = "^1.26"
pre-commit = "^2.21.0"
commitizen = "^2.42.1"
sphinx = {version = "^7.2.6", python = ">=3.9,<4"}
sphinx-rtd-theme = {version = "^2.0.0", python = ">=3.9,<4"}
poethepoet = "^0.24.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]

[tool.ruff.lint]
select = ["D"]

[tool.ruff.lint.pydocstyle]
convention = "google"


[tool.pytest.ini_options]
markers = [
    "ci_exempt: mark a test as exempt from CI.",
    "flaky_test: mark a test as potentially flaky.",
  ]
addopts = [
    "--ignore=tests/api/v2/test_policies.py",
    "--ignore=tests/api/v2/test_queries.py",
  ]

[tool.poe.tasks]
test        = "pytest -v --order-scope=class -m 'not ci_exempt and not flaky_test' tests/api/v2"
flaky_test  = "pytest -m 'flaky_test' tests"
lint        = "flake8 . --exclude 'jupyter' --count --select=E9,F63,F7,F82 --show-source --statistics"
lint-docstrings = "ruff check laceworksdk/"
docs-clean.shell  = "rm -r docs-source/auto; rm -r docs/*"
docs-build.shell  = "sphinx-apidoc -e -f -d 5 -o docs-source/auto laceworksdk && sphinx-build -M html docs-source docs"
docs        = ["docs-clean", "docs-build"]