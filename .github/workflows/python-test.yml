name: Run Python Tests/Linting

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    - cron: "0 8 * * *"

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10"]

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install flake8 flake8-quotes pytest pytest-lazy-fixture pytest-rerunfailures
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
          if [ -f jupyter/requirements.txt ]; then pip install -r jupyter/requirements.txt; fi

      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --exclude "docker_build" --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --exclude "docker_build" --count --exit-zero --max-complexity=10 --statistics

      - name: Run setup.py
        run: |
          python setup.py --version

      - name: Test Jupyter container
        run: |
          pytest -m "not ci_exempt" jupyter/tests

      - name: Test SDK with pytest
        run: |
          pytest -m "not ci_exempt and not flaky_test" tests
        env:
          LW_ACCOUNT: ${{ secrets.LW_ACCOUNT }}
          LW_SUBACCOUNT: ${{ secrets.LW_SUBACCOUNT }}
          LW_API_KEY: ${{ secrets.LW_API_KEY }}
          LW_API_SECRET: ${{ secrets.LW_API_SECRET }}
          LW_BASE_DOMAIN: ${{ secrets.LW_BASE_DOMAIN }}
